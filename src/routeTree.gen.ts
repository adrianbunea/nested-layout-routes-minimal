/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as IndexImport } from './routes/index'
import { Route as ProtectedUsersSearchImport } from './routes/_protected/users/_search'
import { Route as ProtectedUsersSearchIndexImport } from './routes/_protected/users/_search/index'

// Create Virtual Routes

const ProtectedUsersImport = createFileRoute('/_protected/users')()

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedUsersRoute = ProtectedUsersImport.update({
  path: '/users',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedUsersSearchRoute = ProtectedUsersSearchImport.update({
  id: '/_search',
  getParentRoute: () => ProtectedUsersRoute,
} as any)

const ProtectedUsersSearchIndexRoute = ProtectedUsersSearchIndexImport.update({
  path: '/',
  getParentRoute: () => ProtectedUsersSearchRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_protected/users': {
      id: '/_protected/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof ProtectedUsersImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/users/_search': {
      id: '/_protected/users/_search'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof ProtectedUsersSearchImport
      parentRoute: typeof ProtectedUsersRoute
    }
    '/_protected/users/_search/': {
      id: '/_protected/users/_search/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof ProtectedUsersSearchIndexImport
      parentRoute: typeof ProtectedUsersSearchImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ProtectedRoute: ProtectedRoute.addChildren({
    ProtectedUsersRoute: ProtectedUsersRoute.addChildren({
      ProtectedUsersSearchRoute: ProtectedUsersSearchRoute.addChildren({
        ProtectedUsersSearchIndexRoute,
      }),
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_protected"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/users"
      ]
    },
    "/_protected/users": {
      "filePath": "_protected/users",
      "parent": "/_protected",
      "children": [
        "/_protected/users/_search"
      ]
    },
    "/_protected/users/_search": {
      "filePath": "_protected/users/_search.tsx",
      "parent": "/_protected/users",
      "children": [
        "/_protected/users/_search/"
      ]
    },
    "/_protected/users/_search/": {
      "filePath": "_protected/users/_search/index.tsx",
      "parent": "/_protected/users/_search"
    }
  }
}
ROUTE_MANIFEST_END */
